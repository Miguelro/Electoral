sep=",",row.names = FALSE)
write.table(d,"F:/Elecciones/TFM/Datos/Comparativa_VRTaD.csv", quote = FALSE,
sep=";",row.names = FALSE)
R_2008$VRD$medio_superior
R_2008$VRD$medio_superior[2] <- round(R_2008$VRD$medio_superior[2])
R_2019_11$VRD$medio_superior[2] <- round(R_2019_11$VRD$medio_superior[2])
d2 <- cbind(R_2008$VRD$medio_superior,R_2019_11$VRD$medio_superior)
View(d2)
d2 <- cbind(R_2008$VRD$medio_superior,R_2019_11$VRD$medio_superior[2])
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
R_2019_11<- Regionalismo(2019,"11",RutaDescarga = "D:/",
PANES="F:/Elecciones/TFM/Datos/Regionalismo.csv")
R_2008$VRD$medio_superior
R_2008$VRD$medio_superior[2] <- round(R_2008$VRD$medio_superior[2],2)
R_2019_11$VRD$medio_superior
R_2019_11$VRD$medio_superior[2] <- round(R_2019_11$VRD$medio_superior[2],2)
d2 <- cbind(R_2008$VRD$medio_superior,R_2019_11$VRD$medio_superior[2])
View(d2)
write.table(d,"F:/Elecciones/TFM/Datos/Comparativa_VRD.csv", quote = FALSE,
sep=";",row.names = FALSE)
write.csv(d,"F:/Elecciones/TFM/Datos/Comparativa_VRTaD.csv",
quote = FALSE,row.names = FALSE)
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
R_2019_11<- Regionalismo(2019,"11",RutaDescarga = "D:/",
PANES="F:/Elecciones/TFM/Datos/Regionalismo.csv")
R_2008$VRtaD$VRta_CCAA
R_2008$VRtaD$VRta_CCAA[2]<- round(R_2008$VRtaD$VRta_CCAA[2],2)
R_2019_11$VRtaD$VRta_CCAA
R_2019_11$VRtaD$VRta_CCAA[2] <- round(R_2019_11$VRtaD$VRta_CCAA[2],2)
d <- cbind(R_2008$VRtaD$VRta_CCAA,R_2019_11$VRtaD$VRta_CCAA[2])
write.csv(d,"F:/Elecciones/TFM/Datos/Comparativa_VRTaD.csv",
quote = FALSE,row.names = FALSE)
R_2008$VRD$medio_superior
R_2008$VRD$medio_superior[2] <- round(R_2008$VRD$medio_superior[2],2)
R_2019_11$VRD$medio_superior
R_2019_11$VRD$medio_superior[2] <- round(R_2019_11$VRD$medio_superior[2],2)
d2 <- cbind(R_2008$VRD$medio_superior,R_2019_11$VRD$medio_superior[2])
write.table(d,"F:/Elecciones/TFM/Datos/Comparativa_VRD.csv", quote = FALSE,
sep=";",row.names = FALSE)
write.table(d,"F:/Elecciones/TFM/Datos/Comparativa_VRD.csv", quote = FALSE,
sep=",",row.names = FALSE)
write.table(d2,"F:/Elecciones/TFM/Datos/Comparativa_VRD.csv", quote = FALSE,
sep=",",row.names = FALSE)
class(d)
if (!require("xtable")) install.packages("xtable"); require("xtable")
d <- cbind(R_2008$VRtaD$VRta_CCAA,R_2019_11$VRtaD$VRta_CCAA[2])
xtable(d)
library(Relectoral)
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
R_2019_11<- Regionalismo(2019,"11",RutaDescarga = "D:/",
PANES="F:/Elecciones/TFM/Datos/Regionalismo.csv")
R_2008$VRtaD$VRta_CCAA
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
generar_CSV <- function(data,fichero){
#Data es un dataframe con primera columna las siglas de los partidos
# Fichero es el nombre y patch del fichero que se quiere crear
##### Genero las restricciones de acceso correspondientes
if(file.access(names = fichero,mode = 2) == 0) stop("El fichero csv que se quiere generar, no se puede crear
porque no hay permisos de escritura o bien ya existe")
colnames(data)[1] <- c("PARTIDOS")
a <- data.frame(PARTIDOS="PARTIDOS")
data$PARTIDOS <- substring(data$PARTIDOS,3)
data <- rbind(a,data)
data$PARTIDOS <- paste0(data$PARTIDOS,",")
write.table(data[,c(1)],fichero,quote = F,row.names=F,col.names = F)
print(paste0("\u00A1 \u00A1 \u00A1 Generado el fichero de tipo csv: ",fichero,"\u0021 \u0021 \u0021 "))
}
generar_VRta <- function(datos,panes){
# datos es un dataframes. primera columna nivel medio (CCAA), segunda columna niveles
#inferiores (provincias). Despues una columna para cada partido, con nombre el logo del
#partido y conteniendo los votos a ese partido en cada nivel inferior
#panes es el camino de fichero de tipo csv contenendo información sobre panes y no panes
panes <- read.csv(panes,header=T,stringsAsFactors = F)
#### Genero las restricciones correspondientes
if(ncol(panes) !=2 ) stop("El fichero conteniendo el regionalismo ( PANES ) no tiene dos columnas")
colnames(panes) <- c("PARTIDOS","PANE")
panes$PANE <- as.logical(panes$PANE)
suma_total <- rowSums(datos[,3:ncol(datos)])
a <- datos[,3:ncol(datos)]
suma_panes <- rowSums(a[,panes$PANE])  #Sumo quedandome solo con las columnas que son PANE
#Añadimos al resultado final el nombre de provincia
porc_panes_prov <- data.frame(cbind(datos[,c(2)],(suma_panes/suma_total)*100))
colnames(porc_panes_prov)<-c("C_PROv","VRta")
# Para Comunidades Autónomas
votos_CCAA <- datos[,-c(2)] %>% group_by_at(1) %>% summarise_all(list(sum))
suma_total <- rowSums(votos_CCAA[,-c(1)])
a <- votos_CCAA[,-c(1)]
suma_panes <- rowSums(a[,panes$PANE])
porc_panes_CCAA <- data.frame(cbind(votos_CCAA[,c(1)]),(suma_panes/suma_total)*100)
colnames(porc_panes_CCAA) <- c("CCAA","VRta_CCAA")
# Calculo ahora el VRtaD
# Tengo que introducir el VRta de la C.A en cada provincia, lo hago ccon un merge
tem <- merge(datos[,c(1,2)],porc_panes_prov,by.x='Nombre de Provincia',by.y = 'C_PROv')
resul<-merge(tem,porc_panes_CCAA,by.x = 'Nombre de Comunidad',by.y='CCAA')
broser()
resul$VRtaD <- resul$VRta-resul$VRta_CCAA
resul <- resul[,c(2,5)]
#Calculamos ahora VRtaD para CCAA
# Calculamos el apoyo panes a nivel nacional
# Total votos por partidos
T_vot_part <- sum(colSums(datos[,3:ncol(datos)]))
T_vot_part_PANES <-sum(colSums(datos[,3:ncol(datos)][panes$PANE]))
# VRtad nacional
POR_PANES_NACIONAL <-(T_vot_part_PANES/T_vot_part)*100
# PAra cada C.A cada porcentaje PANES le resto  POR_PANES_NACIONAL
VRtaD_CCAA <- porc_panes_CCAA[2]-
matrix(POR_PANES_NACIONAL,ncol = nrow(porc_panes_CCAA))
VRtaD_CCAA <- cbind(porc_panes_CCAA[1],VRtaD_CCAA)
resul_Total <-list(VRta_Inferior=porc_panes_prov,
VRta_Medio=porc_panes_CCAA,
VRtaD_inferior=resul,
VRtaD_Medio=VRtaD_CCAA)
return(resul_Total)
}
#'@title Indice Dimension de voto. Regionalismo
#'
Regionalismo <- function(Ano=0,Mes="",RutaDescarga="",Auto=TRUE,datos="",PANES="",Generate_PANES=FALSE){
# Ano es el año a cuatro dígitos. Mes es numero de mes a dos dítos.
#RutaDescarga es donde se descarga el zip proveniente del MIR. Auto es para proceso autom. (descarga MIR) o no
#PANES es el nombre , con el pacth,de fichero CSV que contiene información sobre PANES
#Generate_PANES boolean para indicar si se hay que generar fichero csv con las siglas de los partidos o no
# datos es un data.frame con una estructura similar a la que se descarga del MIR
if(Auto==TRUE & Ano==0) stop("Como auto=TRUE, debe facilitarse un a\u00F1 a cuatro d\u00EDgitos")
if(Auto==TRUE & ((Mes=="") || (nchar(Mes) !=2) || (class(Mes) != "character")))
stop("Como auto=TRUE debe facilitarse el mes en formato character y a dos d\u00EDgitos")
if(Generate_PANES==FALSE & file.exists(PANES)==FALSE) stop("No se ha indicado ning\u00FAn fichero de tipo csv
o el indicado  con el par\u00E1metro no se encuentra ")
if(Auto == TRUE){
data <- suppressMessages(Agregado_Prov_MIR(Ano,Mes,Tipo="Congreso",RutaDescarga, Borrar=T))
# Miro la columna que comienza por "V_"
V_idx <-  which(substr(colnames(data),1,2)=="V_")
V_idx <- c(1,3,V_idx) #Añado las columnas 1 y 2
datos <- data[1:52,V_idx]  #Selecciono esas columnas y elimino las filas con el total
} else {datos = datos}
datos=as.data.frame(datos)
# Para unificar doy esta denominación al fichero de entrada
colnames(datos)[c(1,2)]<-c("Nombre de Comunidad","Nombre de Provincia")
# Si queremos crear el fichero de tipo csv con información de PANES y NO PANES
if(Generate_PANES == TRUE){
# Genero restricciones para la generación del fichero CSV
if(class(datos) !="data.frame") stop( "Para generar el fichero csv se tiene que facilitar el data.frame
,con la estructura adecuada, conteniendo informaci\u00F3n sobre los partidos y votos ")
a <- as.data.frame(colnames(datos)[3:ncol(datos)])
colnames(a) <- "PARTIDOS"
generar_CSV(a,PANES)
return()
}
#############################
# Calculo del VRD
##################################
colnames(datos)[3:ncol(datos)] <- substring(colnames(datos)[3:ncol(datos)],3)
#Convierto la columna de votos-escaños en numericos
datos[,3:ncol(datos)]<-apply(datos[,3:ncol(datos)],2,as.integer)
sumrows <- rowSums(datos[,3:ncol(datos)])
votos_porc <- (datos[,3:ncol(datos)]/sumrows)*100
votos_porc <- cbind(datos[,c(1,2)],votos_porc)
colnames(votos_porc)[c(1,2)] <- c("CCAA","Prov")
votos_porc_ccaa <- votos_porc[,-c(2)] %>% group_by(CCAA) %>% summarise_all(list(mean))
votos_porc_ccaa <- merge(votos_porc[,c(1,2)],votos_porc_ccaa, by="CCAA")
votos_porc <- votos_porc[order(votos_porc$Prov),]
votos_porc_ccaa <- votos_porc_ccaa[order(votos_porc_ccaa$Prov),]
resul_parc <- abs(votos_porc[,3:ncol(datos)] - votos_porc_ccaa[,3:ncol(datos)])
resul <- rowSums(resul_parc)*0.5
#Añadimos al resultado final el nombre de provincia
resul <- data.frame(cbind(votos_porc_ccaa[,c(2)],resul))
colnames(resul)<-c("Nivel_Inferior","VRD")
# Calcullamos VRD de nivel inferior (provincias) frente al superior (Estado)
# Calculamos la suma por coulumna
col_sum <-colSums(datos[,3:ncol(datos)])
# Calculamos los porcentajes para cada partido
col_sum_porcen <- (col_sum/sum(col_sum))*100
# para poder hacer la resta repetimos esta fila 52 veces
col_sum_porcen <- as.data.frame(do.call("rbind",replicate(nrow(votos_porc),col_sum_porcen,simplify=FALSE)))
resul_prov_Total <- abs(votos_porc[,3:ncol(datos)]-col_sum_porcen)
resul_prov_Total <- rowSums(resul_prov_Total)*0.5
# Añado las provincias
resul_prov_Total<-data.frame(cbind(votos_porc[,c(2)],resul_prov_Total))
colnames(resul_prov_Total)<-c("Provinc.","VRD")
# Calculamos lo anterior pero para el nivel intermedio, es decir CCAA frente al superior
votos_porc_ccaa <- votos_porc[,-c(2)] %>% group_by(CCAA) %>% summarise_all(list(mean))
# Calculamos la suma por coulumna
col_sum <-colSums(datos[,3:ncol(datos)])
# Calculamos los porcentajes para cada partido
col_sum_porcen <- (col_sum/sum(col_sum))*100
# para poder hacer la resta repetimos esta fila 52 veces
col_sum_porcen <- as.data.frame(do.call("rbind",replicate(nrow(votos_porc_ccaa),col_sum_porcen,simplify=FALSE)))
resul_CCAA_TOTAL <- abs(votos_porc_ccaa[,-c(1)]-col_sum_porcen)
resul_CCAA_TOTAL <- rowSums(resul_CCAA_TOTAL)*0.5
# Añadimos ahora el nombre de la CCAA
resul_CCAA_TOTAL <- data.frame(cbind(votos_porc_ccaa[,c(1)],resul_CCAA_TOTAL))
colnames(resul_CCAA_TOTAL) <- c("CCAA","VRD")
#Devuelvo los resultados de VRD
resulVRD <-list(inferior_medio = resul, inferior_superior = resul_prov_Total,
medio_superior= resul_CCAA_TOTAL)
##############################
# Calculos con PANES, NOPANES
###############################
res_PANES<- generar_VRta(datos,PANES)
# Devuelvo los resultados totales
devolver <- list(VRtaD=res_PANES,VRD=resulVRD)
return(devolver)
}
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
library(Relectoral)
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
library(Relectoral)
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
if (!require("dplyr")) install.packages("dplyr"); require("dplyr")
generar_CSV <- function(data,fichero){
#Data es un dataframe con primera columna las siglas de los partidos
# Fichero es el nombre y patch del fichero que se quiere crear
##### Genero las restricciones de acceso correspondientes
if(file.access(names = fichero,mode = 2) == 0) stop("El fichero csv que se quiere generar, no se puede crear
porque no hay permisos de escritura o bien ya existe")
colnames(data)[1] <- c("PARTIDOS")
a <- data.frame(PARTIDOS="PARTIDOS")
data$PARTIDOS <- substring(data$PARTIDOS,3)
data <- rbind(a,data)
data$PARTIDOS <- paste0(data$PARTIDOS,",")
write.table(data[,c(1)],fichero,quote = F,row.names=F,col.names = F)
print(paste0("\u00A1 \u00A1 \u00A1 Generado el fichero de tipo csv: ",fichero,"\u0021 \u0021 \u0021 "))
}
generar_VRta <- function(datos,panes){
# datos es un dataframes. primera columna nivel medio (CCAA), segunda columna niveles
#inferiores (provincias). Despues una columna para cada partido, con nombre el logo del
#partido y conteniendo los votos a ese partido en cada nivel inferior
#panes es el camino de fichero de tipo csv contenendo información sobre panes y no panes
panes <- read.csv(panes,header=T,stringsAsFactors = F)
#### Genero las restricciones correspondientes
if(ncol(panes) !=2 ) stop("El fichero conteniendo el regionalismo ( PANES ) no tiene dos columnas")
colnames(panes) <- c("PARTIDOS","PANE")
panes$PANE <- as.logical(panes$PANE)
suma_total <- rowSums(datos[,3:ncol(datos)])
a <- datos[,3:ncol(datos)]
suma_panes <- rowSums(a[,panes$PANE])  #Sumo quedandome solo con las columnas que son PANE
#Añadimos al resultado final el nombre de provincia
porc_panes_prov <- data.frame(cbind(datos[,c(2)],(suma_panes/suma_total)*100))
colnames(porc_panes_prov)<-c("C_PROv","VRta")
# Para Comunidades Autónomas
votos_CCAA <- datos[,-c(2)] %>% group_by_at(1) %>% summarise_all(list(sum))
suma_total <- rowSums(votos_CCAA[,-c(1)])
a <- votos_CCAA[,-c(1)]
suma_panes <- rowSums(a[,panes$PANE])
porc_panes_CCAA <- data.frame(cbind(votos_CCAA[,c(1)]),(suma_panes/suma_total)*100)
colnames(porc_panes_CCAA) <- c("CCAA","VRta_CCAA")
# Calculo ahora el VRtaD
# Tengo que introducir el VRta de la C.A en cada provincia, lo hago ccon un merge
tem <- merge(datos[,c(1,2)],porc_panes_prov,by.x='Nombre de Provincia',by.y = 'C_PROv')
resul<-merge(tem,porc_panes_CCAA,by.x = 'Nombre de Comunidad',by.y='CCAA')
browser()
resul$VRtaD <- resul$VRta-resul$VRta_CCAA
resul <- resul[,c(2,5)]
#Calculamos ahora VRtaD para CCAA
# Calculamos el apoyo panes a nivel nacional
# Total votos por partidos
T_vot_part <- sum(colSums(datos[,3:ncol(datos)]))
T_vot_part_PANES <-sum(colSums(datos[,3:ncol(datos)][panes$PANE]))
# VRtad nacional
POR_PANES_NACIONAL <-(T_vot_part_PANES/T_vot_part)*100
# PAra cada C.A cada porcentaje PANES le resto  POR_PANES_NACIONAL
VRtaD_CCAA <- porc_panes_CCAA[2]-
matrix(POR_PANES_NACIONAL,ncol = nrow(porc_panes_CCAA))
VRtaD_CCAA <- cbind(porc_panes_CCAA[1],VRtaD_CCAA)
resul_Total <-list(VRta_Inferior=porc_panes_prov,
VRta_Medio=porc_panes_CCAA,
VRtaD_inferior=resul,
VRtaD_Medio=VRtaD_CCAA)
return(resul_Total)
}
#'@title Indice Dimension de voto. Regionalismo
Regionalismo <- function(Ano=0,Mes="",RutaDescarga="",Auto=TRUE,datos="",PANES="",Generate_PANES=FALSE){
# Ano es el año a cuatro dígitos. Mes es numero de mes a dos dítos.
#RutaDescarga es donde se descarga el zip proveniente del MIR. Auto es para proceso autom. (descarga MIR) o no
#PANES es el nombre , con el pacth,de fichero CSV que contiene información sobre PANES
#Generate_PANES boolean para indicar si se hay que generar fichero csv con las siglas de los partidos o no
# datos es un data.frame con una estructura similar a la que se descarga del MIR
if(Auto==TRUE & Ano==0) stop("Como auto=TRUE, debe facilitarse un a\u00F1 a cuatro d\u00EDgitos")
if(Auto==TRUE & ((Mes=="") || (nchar(Mes) !=2) || (class(Mes) != "character")))
stop("Como auto=TRUE debe facilitarse el mes en formato character y a dos d\u00EDgitos")
if(Generate_PANES==FALSE & file.exists(PANES)==FALSE) stop("No se ha indicado ning\u00FAn fichero de tipo csv
o el indicado  con el par\u00E1metro no se encuentra ")
if(Auto == TRUE){
data <- suppressMessages(Agregado_Prov_MIR(Ano,Mes,Tipo="Congreso",RutaDescarga, Borrar=T))
# Miro la columna que comienza por "V_"
V_idx <-  which(substr(colnames(data),1,2)=="V_")
V_idx <- c(1,3,V_idx) #Añado las columnas 1 y 2
datos <- data[1:52,V_idx]  #Selecciono esas columnas y elimino las filas con el total
} else {datos = datos}
datos=as.data.frame(datos)
# Para unificar doy esta denominación al fichero de entrada
colnames(datos)[c(1,2)]<-c("Nombre de Comunidad","Nombre de Provincia")
# Si queremos crear el fichero de tipo csv con información de PANES y NO PANES
if(Generate_PANES == TRUE){
# Genero restricciones para la generación del fichero CSV
if(class(datos) !="data.frame") stop( "Para generar el fichero csv se tiene que facilitar el data.frame
,con la estructura adecuada, conteniendo informaci\u00F3n sobre los partidos y votos ")
a <- as.data.frame(colnames(datos)[3:ncol(datos)])
colnames(a) <- "PARTIDOS"
generar_CSV(a,PANES)
return()
}
#############################
# Calculo del VRD
##################################
colnames(datos)[3:ncol(datos)] <- substring(colnames(datos)[3:ncol(datos)],3)
#Convierto la columna de votos-escaños en numericos
datos[,3:ncol(datos)]<-apply(datos[,3:ncol(datos)],2,as.integer)
sumrows <- rowSums(datos[,3:ncol(datos)])
votos_porc <- (datos[,3:ncol(datos)]/sumrows)*100
votos_porc <- cbind(datos[,c(1,2)],votos_porc)
colnames(votos_porc)[c(1,2)] <- c("CCAA","Prov")
votos_porc_ccaa <- votos_porc[,-c(2)] %>% group_by(CCAA) %>% summarise_all(list(mean))
votos_porc_ccaa <- merge(votos_porc[,c(1,2)],votos_porc_ccaa, by="CCAA")
votos_porc <- votos_porc[order(votos_porc$Prov),]
votos_porc_ccaa <- votos_porc_ccaa[order(votos_porc_ccaa$Prov),]
resul_parc <- abs(votos_porc[,3:ncol(datos)] - votos_porc_ccaa[,3:ncol(datos)])
resul <- rowSums(resul_parc)*0.5
#Añadimos al resultado final el nombre de provincia
resul <- data.frame(cbind(votos_porc_ccaa[,c(2)],resul))
colnames(resul)<-c("Nivel_Inferior","VRD")
# Calcullamos VRD de nivel inferior (provincias) frente al superior (Estado)
# Calculamos la suma por coulumna
col_sum <-colSums(datos[,3:ncol(datos)])
# Calculamos los porcentajes para cada partido
col_sum_porcen <- (col_sum/sum(col_sum))*100
# para poder hacer la resta repetimos esta fila 52 veces
col_sum_porcen <- as.data.frame(do.call("rbind",replicate(nrow(votos_porc),col_sum_porcen,simplify=FALSE)))
resul_prov_Total <- abs(votos_porc[,3:ncol(datos)]-col_sum_porcen)
resul_prov_Total <- rowSums(resul_prov_Total)*0.5
# Añado las provincias
resul_prov_Total<-data.frame(cbind(votos_porc[,c(2)],resul_prov_Total))
colnames(resul_prov_Total)<-c("Provinc.","VRD")
# Calculamos lo anterior pero para el nivel intermedio, es decir CCAA frente al superior
votos_porc_ccaa <- votos_porc[,-c(2)] %>% group_by(CCAA) %>% summarise_all(list(mean))
# Calculamos la suma por coulumna
col_sum <-colSums(datos[,3:ncol(datos)])
# Calculamos los porcentajes para cada partido
col_sum_porcen <- (col_sum/sum(col_sum))*100
# para poder hacer la resta repetimos esta fila 52 veces
col_sum_porcen <- as.data.frame(do.call("rbind",replicate(nrow(votos_porc_ccaa),col_sum_porcen,simplify=FALSE)))
resul_CCAA_TOTAL <- abs(votos_porc_ccaa[,-c(1)]-col_sum_porcen)
resul_CCAA_TOTAL <- rowSums(resul_CCAA_TOTAL)*0.5
# Añadimos ahora el nombre de la CCAA
resul_CCAA_TOTAL <- data.frame(cbind(votos_porc_ccaa[,c(1)],resul_CCAA_TOTAL))
colnames(resul_CCAA_TOTAL) <- c("CCAA","VRD")
#Devuelvo los resultados de VRD
resulVRD <-list(inferior_medio = resul, inferior_superior = resul_prov_Total,
medio_superior= resul_CCAA_TOTAL)
##############################
# Calculos con PANES, NOPANES
###############################
res_PANES<- generar_VRta(datos,PANES)
# Devuelvo los resultados totales
devolver <- list(VRtaD=res_PANES,VRD=resulVRD)
return(devolver)
}
r <- Regionalismo(Ano=2019,Mes = "11",RutaDescarga = "D:/" ,
PANES = "G:/Elecciones/TFM/Datos/Regionalismo.csv")
r <- Regionalismo(Ano=2019,Mes = "11",RutaDescarga = "D:/" ,PANES = "G:/Elecciones/TFM/Datos/Regionalismo.csv")
r <- Regionalismo(Ano=2019,Mes = "11",RutaDescarga = "D:/" ,PANES = "F:/Elecciones/TFM/Datos/Regionalismo.csv")
resul$VRta
as.numeric(as.character(resul$VRta))
generar_VRta <- function(datos,panes){
# datos es un dataframes. primera columna nivel medio (CCAA), segunda columna niveles
#inferiores (provincias). Despues una columna para cada partido, con nombre el logo del
#partido y conteniendo los votos a ese partido en cada nivel inferior
#panes es el camino de fichero de tipo csv contenendo información sobre panes y no panes
panes <- read.csv(panes,header=T,stringsAsFactors = F)
#### Genero las restricciones correspondientes
if(ncol(panes) !=2 ) stop("El fichero conteniendo el regionalismo ( PANES ) no tiene dos columnas")
colnames(panes) <- c("PARTIDOS","PANE")
panes$PANE <- as.logical(panes$PANE)
suma_total <- rowSums(datos[,3:ncol(datos)])
a <- datos[,3:ncol(datos)]
suma_panes <- rowSums(a[,panes$PANE])  #Sumo quedandome solo con las columnas que son PANE
#Añadimos al resultado final el nombre de provincia
porc_panes_prov <- data.frame(cbind(datos[,c(2)],(suma_panes/suma_total)*100))
colnames(porc_panes_prov)<-c("C_PROv","VRta")
# Para Comunidades Autónomas
votos_CCAA <- datos[,-c(2)] %>% group_by_at(1) %>% summarise_all(list(sum))
suma_total <- rowSums(votos_CCAA[,-c(1)])
a <- votos_CCAA[,-c(1)]
suma_panes <- rowSums(a[,panes$PANE])
porc_panes_CCAA <- data.frame(cbind(votos_CCAA[,c(1)]),(suma_panes/suma_total)*100)
colnames(porc_panes_CCAA) <- c("CCAA","VRta_CCAA")
# Calculo ahora el VRtaD
# Tengo que introducir el VRta de la C.A en cada provincia, lo hago ccon un merge
tem <- merge(datos[,c(1,2)],porc_panes_prov,by.x='Nombre de Provincia',by.y = 'C_PROv')
resul<-merge(tem,porc_panes_CCAA,by.x = 'Nombre de Comunidad',by.y='CCAA')
resu$VRta <- as.numeric(as.character(resul$VRta))
resul$VRtaD <- resul$VRta-resul$VRta_CCAA
resul <- resul[,c(2,5)]
#Calculamos ahora VRtaD para CCAA
# Calculamos el apoyo panes a nivel nacional
# Total votos por partidos
T_vot_part <- sum(colSums(datos[,3:ncol(datos)]))
T_vot_part_PANES <-sum(colSums(datos[,3:ncol(datos)][panes$PANE]))
# VRtad nacional
POR_PANES_NACIONAL <-(T_vot_part_PANES/T_vot_part)*100
# PAra cada C.A cada porcentaje PANES le resto  POR_PANES_NACIONAL
VRtaD_CCAA <- porc_panes_CCAA[2]-
matrix(POR_PANES_NACIONAL,ncol = nrow(porc_panes_CCAA))
VRtaD_CCAA <- cbind(porc_panes_CCAA[1],VRtaD_CCAA)
resul_Total <-list(VRta_Inferior=porc_panes_prov,
VRta_Medio=porc_panes_CCAA,
VRtaD_inferior=resul,
VRtaD_Medio=VRtaD_CCAA)
return(resul_Total)
}
r <- Regionalismo(Ano=2019,Mes = "11",RutaDescarga = "D:/" ,PANES = "F:/Elecciones/TFM/Datos/Regionalismo.csv")
generar_VRta <- function(datos,panes){
# datos es un dataframes. primera columna nivel medio (CCAA), segunda columna niveles
#inferiores (provincias). Despues una columna para cada partido, con nombre el logo del
#partido y conteniendo los votos a ese partido en cada nivel inferior
#panes es el camino de fichero de tipo csv contenendo información sobre panes y no panes
panes <- read.csv(panes,header=T,stringsAsFactors = F)
#### Genero las restricciones correspondientes
if(ncol(panes) !=2 ) stop("El fichero conteniendo el regionalismo ( PANES ) no tiene dos columnas")
colnames(panes) <- c("PARTIDOS","PANE")
panes$PANE <- as.logical(panes$PANE)
suma_total <- rowSums(datos[,3:ncol(datos)])
a <- datos[,3:ncol(datos)]
suma_panes <- rowSums(a[,panes$PANE])  #Sumo quedandome solo con las columnas que son PANE
#Añadimos al resultado final el nombre de provincia
porc_panes_prov <- data.frame(cbind(datos[,c(2)],(suma_panes/suma_total)*100))
colnames(porc_panes_prov)<-c("C_PROv","VRta")
# Para Comunidades Autónomas
votos_CCAA <- datos[,-c(2)] %>% group_by_at(1) %>% summarise_all(list(sum))
suma_total <- rowSums(votos_CCAA[,-c(1)])
a <- votos_CCAA[,-c(1)]
suma_panes <- rowSums(a[,panes$PANE])
porc_panes_CCAA <- data.frame(cbind(votos_CCAA[,c(1)]),(suma_panes/suma_total)*100)
colnames(porc_panes_CCAA) <- c("CCAA","VRta_CCAA")
# Calculo ahora el VRtaD
# Tengo que introducir el VRta de la C.A en cada provincia, lo hago ccon un merge
tem <- merge(datos[,c(1,2)],porc_panes_prov,by.x='Nombre de Provincia',by.y = 'C_PROv')
resul<-merge(tem,porc_panes_CCAA,by.x = 'Nombre de Comunidad',by.y='CCAA')
resul$VRta <- as.numeric(as.character(resul$VRta))
resul$VRtaD <- resul$VRta-resul$VRta_CCAA
resul <- resul[,c(2,5)]
#Calculamos ahora VRtaD para CCAA
# Calculamos el apoyo panes a nivel nacional
# Total votos por partidos
T_vot_part <- sum(colSums(datos[,3:ncol(datos)]))
T_vot_part_PANES <-sum(colSums(datos[,3:ncol(datos)][panes$PANE]))
# VRtad nacional
POR_PANES_NACIONAL <-(T_vot_part_PANES/T_vot_part)*100
# PAra cada C.A cada porcentaje PANES le resto  POR_PANES_NACIONAL
VRtaD_CCAA <- porc_panes_CCAA[2]-
matrix(POR_PANES_NACIONAL,ncol = nrow(porc_panes_CCAA))
VRtaD_CCAA <- cbind(porc_panes_CCAA[1],VRtaD_CCAA)
resul_Total <-list(VRta_Inferior=porc_panes_prov,
VRta_Medio=porc_panes_CCAA,
VRtaD_inferior=resul,
VRtaD_Medio=VRtaD_CCAA)
return(resul_Total)
}
r <- Regionalismo(Ano=2019,Mes = "11",RutaDescarga = "D:/" ,PANES = "F:/Elecciones/TFM/Datos/Regionalismo.csv")
r$VRtaD$VRtaD_Medio
library(Relectoral)
library(Relectoral)
if (!require("Relectoral")) install.packages("Relectoral"); require("Relectoral")
R_2008 <- Regionalismo(2008,"03",RutaDescarga = "D:/",
PANES = "F:/Elecciones/TFM/Datos/panes2008.csv")
R_2019_11<- Regionalismo(2019,"11",RutaDescarga = "D:/",
PANES="F:/Elecciones/TFM/Datos/Regionalismo.csv")
R_2008$VRtaD$VRta_Medio
R_2008$VRtaD$VRta_Medio[2]<- round(R_2008$VRtaD$VRta_Medio[2],2)
R_2008$VRtaD$VRta_Medio
R_2008$VRtaD$VRta_Medio[2]<- round(R_2008$VRtaD$VRta_Medio[2],2)
R_2019_11$VRtaD$VRta_Medio
R_2019_11$VRtaD$VRta_Medio[2] <- round(R_2019_11$VRtaD$VRta_Medio[2],2)
R_2008$VRD$medio_superior
R_2008$VRD$medio_superior[2] <- round(R_2008$VRD$medio_superior[2],2)
R_2019_11$VRD$medio_superior
R_2008$VRtaD$VRtaD_Medio
a<-cbin(R_2008$VRtaD$VRtaD_Medio,R_2019_11$VRtaD$VRtaD_Medio[,2])
a<-cbind(R_2008$VRtaD$VRtaD_Medio,R_2019_11$VRtaD$VRtaD_Medio[,2])
a
a<-cbind(R_2008$VRtaD$VRtaD_Medio,R_2019_11$VRtaD$VRtaD_Medio[2])
a
write.table(a,"F:/Elecciones/TFM/Datos/Comparativa_VRtaD.csv", quote = FALSE,
sep=",",row.names = FALSE)
R_2008$VRtaD$VRta_Medio <-round(R_2008$VRtaD$VRta_Medio,2)
R_2008$VRtaD$VRta_Medio[2] <-round(R_2008$VRtaD$VRta_Medio[2],2)
a<-cbind(R_2008$VRtaD$VRtaD_Medio,round(R_2019_11$VRtaD$VRtaD_Medio[2],2)
write.table(a,"F:/Elecciones/TFM/Datos/Comparativa_VRtaD.csv", quote = FALSE,
sep=",",row.names = FALSE)
a<-cbind(R_2008$VRtaD$VRtaD_Medio,round(R_2019_11$VRtaD$VRtaD_Medio[2],2))
write.table(a,"F:/Elecciones/TFM/Datos/Comparativa_VRtaD.csv", quote = FALSE,
sep=",",row.names = FALSE)
R_2008$VRtaD$VRta_Medio$VRta_CCAA <-round(R_2008$VRtaD$VRta_Medio$VRta_CCAA,2)
a<-cbind(R_2008$VRtaD$VRtaD_Medio,round(R_2019_11$VRtaD$VRtaD_Medio[2],2))
write.table(a,"F:/Elecciones/TFM/Datos/Comparativa_VRtaD.csv", quote = FALSE,
sep=",",row.names = FALSE)
R_2008$VRtaD$VRtaD_Medio$VRta_CCAA <-round(R_2008$VRtaD$VRtaD_Medio$VRta_CCAA,2)
a<-cbind(R_2008$VRtaD$VRtaD_Medio,round(R_2019_11$VRtaD$VRtaD_Medio[2],2))
write.table(a,"F:/Elecciones/TFM/Datos/Comparativa_VRtaD.csv", quote = FALSE,
sep=",",row.names = FALSE)
a
