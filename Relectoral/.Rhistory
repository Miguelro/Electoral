dat2<-read_xlsx("F:/Elecciones/TFM/Datos/volatilidad/noviembre_19.xlsx",col_names = T)
dat1.head()
dat1
head(dat1)
head(dat1)
View(dat1)
library(Relectoral)
?system.file()
gwd()
getwd()
?check()
library("devtools", lib.loc="D:/programas/R/R-3.6.1/library")
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="D:/programas/R/R-3.6.1/library")
?system.file()
system.file()
system.file("Relectoral")
library(Relectoral)
library(Relectoral)
?system.file()
library(Relectoral)
?download.file
?unzip
?read.fwf
library(Relectoral)
library(Relectoral)
?weighted.mean
?lm
?line
library(Relectoral)
library("devtools", lib.loc="D:/programas/R/R-3.6.1/library")
devtools::build_manual()
if (!require("stringr")) install.packages("stringr");require("stringr")
if (!require("readxl")) install.packages("readxl");require("readxl")
if (!require("reshape2")) install.packages("reshape2");require("reshape2")
if (!require("tidyverse")) install.packages("tidyverse");require("tidyverse")
if (!require("sf")) install.packages("sf"); require("sf")
setwd("F:/Elecciones/ComunidadMadrid/")
secciones <- read_excel("Ficheros/Secciones_1_1_2020.xls",skip = 4,col_names = T)
colnames(secciones)[3] <- c("Seccion")
secciones$Distrito <-str_pad(secciones$Distrito,2,pad = "0")
secciones$Barrio <-str_pad(secciones$Barrio,3,pad = "0")
secciones$Seccion <- str_pad(secciones$Seccion,3,pad = "0")
barrios<-read.table('Ficheros/Barrios.csv', header = TRUE, sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
nombre_distritos <- read.table('Ficheros/Distritos_Madrid_Municipio.csv', header = TRUE,
sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
Resultados<-readRDS("Ficheros/Todas_Elecc.rds")
Resultados$porcen<-round((Resultados$Votos/(Resultados$T_Votos-Resultados$V_Blancos-Resultados$V_Nulos ))*100,2)
Resultados <- Resultados[Resultados$Ano=='2019' & Resultados$Codmun==79,]
View(Resultados)
Resultados.cast_abs <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'Votos')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_abs$Distrito[i] =str_pad(strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_abs$Seccion[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][2]
Resultados.cast_abs$Letra_Mesa[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][3]
}
Resultados.cast_porcen <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'porcen')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_porcen$Distrito[i] =str_pad(strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_porcen$Seccion[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][2]
Resultados.cast_porcen$Letra_Mesa[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][3]
}
Resultados.cast_porcen$porcenPPCS <- Resultados.cast_porcen$PP -Resultados.cast_porcen$Cs
View(Resultados.cast_porcen)
min(Resultados.cast_porcen$porcenPPCS)
max(Resultados.cast_porcen$porcenPPCS)
hist(Resultados.cast_porcen$porcenPPCS)
unique(Resultados.cast_porcen$Distrito)
for(i in unique(Resultados.cast_porcen$Distrito)){
dat <- Resultados.cast_porcen[Resultados.cast_porcen$Distrito==i,c("porcenPPCS")]
#Nombre del distrito
nombre = nombre_distritos[nombre_distritos$Cod==i,2]
hist(dat,main = paste("Distrito:",nombre),breaks=20,xlab = "Difernecias",ylab = "Frecuencias")
}
q<-quantile(Resultados.cast_porcen$porcenPPCS)
q
datos_secc <- Resultados.cast_abs %>% group_by(Codmun,Distrito,Seccion) %>%
summarise_if(is.numeric,sum)
datos_secc$Seccion = str_trim(datos_secc$Seccion)
datos_secc <- merge(datos_secc,secciones,by= c("Distrito","Seccion"))
datos_barrio <- datos_secc %>% group_by(Codmun,Barrio) %>%
summarise_if(is.numeric,sum)
datos_barrio_porcen <- datos_barrio
datos_barrio_porcen[,6:20]<- round((datos_barrio[,6:20]/apply(datos_barrio[,6:20],1,sum))*100,2)
datos_barrio_porcen$dife <- datos_barrio_porcen$PP-datos_barrio_porcen$Cs
q_barrio <- quantile(datos_barrio_porcen$dife)
q_barrio
datos_barrio_porcen$quartil<- cut(datos_barrio_porcen$dife,q_barrio,
labels = c("q1","q2","q3","q4"),include.lowest = TRUE)
q_barrio <- quantile(datos_barrio_porcen$dife)
datos_barrio_porcen$quartil<- cut(datos_barrio_porcen$dife,q_barrio,
labels = c("q1","q2","q3","q4"),include.lowest = TRUE)
mapa<-st_read(
dsn="Mapas/Barrios_Madrid_1_1_2019",
layer = "200001694",stringsAsFactors=F,
options = "ENCODING=windows-1252")
mapa$Barrio <- substr(mapa$GEOCODIGO,4,6)
mapa2<-left_join(mapa,datos_barrio_porcen,by=c("Barrio"))
if (!require("tmap")) install.packages("tmap");require("tmap")
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="quantile",title = "Diferencia")+
tm_borders()+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
socio <- as.data.frame(read_excel("Ficheros/Demografia/Estructura_Demografica.xls",skip = 5))
socio <- socio[complete.cases(socio) ,]
colnames(socio)<- c("Dis-Barrio","Densi","EMedia","EMediana","Pro_Juven","Pro_enve","ProSobreEnv",
"IndiEnve","IndiJuven","Indidepen","IndiPobActiva","InDReemPobActiva","ProgrDemogr",
"ProporExtran","NaciFuerEspa","InmiExtr")
for(i in 1:nrow(socio) ){
den <- strsplit(socio$`Dis-Barrio`[i],"\\.")[[1]][1]
if(i==1){
socio$ambito[i] = "Total"
socio$cod[i] ="00"
} else if(nchar(den)==2){
socio$ambito[i] = "Distrito"
socio$cod[i] = den
} else{
socio$cod[i] = den
socio$ambito[i] = "Barrio"
}
}
socio_Barrio <- socio[socio$ambito=='Barrio',]
union <- merge(datos_barrio_porcen,socio_Barrio,by.x=c("Barrio"),by.y = c("cod"))
union <- merge(union,barrios,by.x = c("Barrio"),by.y = c("Cod"))
diferencias <- union[,c("Nombre","dife","EMedia","ProporExtran")]
(diferencias <- diferencias %>% arrange(dife))
union %>% group_by(quartil) %>% summarise(media=mean(EMediana))
View(datos_barrio_porcen)
View(datos_barrio_porcen)
View(datos_barrio_porcen)
View(mapa2)
tm_shape(mapa2)+
tm_fill("CS",palette="Blues", style="quantile",title = "Voto Cs")+
tm_borders()+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="quantile",title = "Voto Cs")+
tm_borders()+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))+
tm_text("Barrio")
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))+
tm_text("Barrio",size='AREA')
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size='AREA')+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio")+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size="4")+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size=4)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("Barrio",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Cs",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
datos_barrio_porcen$dife <- round(datos_barrio_porcen$PP-datos_barrio_porcen$Cs,2)
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
mapa2<-left_join(mapa,datos_barrio_porcen,by=c("Barrio"))
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
if (!require("stringr")) install.packages("stringr");require("stringr")
if (!require("readxl")) install.packages("readxl");require("readxl")
if (!require("reshape2")) install.packages("reshape2");require("reshape2")
if (!require("tidyverse")) install.packages("tidyverse");require("tidyverse")
if (!require("sf")) install.packages("sf"); require("sf")
setwd("F:/Elecciones/ComunidadMadrid/")
#Para leer el fichero de secciones
secciones <- read_excel("Ficheros/Secciones_1_1_2020.xls",skip = 4,col_names = T)
colnames(secciones)[3] <- c("Seccion")
secciones$Distrito <-str_pad(secciones$Distrito,2,pad = "0")
secciones$Barrio <-str_pad(secciones$Barrio,3,pad = "0")
secciones$Seccion <- str_pad(secciones$Seccion,3,pad = "0")
#Para leer el fichero de barrios
barrios<-read.table('Ficheros/Barrios.csv', header = TRUE, sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
# Los distritos con sus nombre
nombre_distritos <- read.table('Ficheros/Distritos_Madrid_Municipio.csv', header = TRUE,
sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
#Leo fichero resultados electorales
Resultados<-readRDS("Ficheros/Todas_Elecc.rds")
#Obtengo los porcentajes de los votos
Resultados$porcen<-round((Resultados$Votos/(Resultados$T_Votos-Resultados$V_Blancos-Resultados$V_Nulos ))*100,2)
#Me quedo sólo con el municipio de Madrid
Resultados <- Resultados[Resultados$Ano=='2019' & Resultados$Codmun==79,]
Resultados.cast_abs <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'Votos')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_abs$Distrito[i] =str_pad(strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_abs$Seccion[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][2]
Resultados.cast_abs$Letra_Mesa[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][3]
}
Resultados.cast_porcen <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'porcen')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_porcen$Distrito[i] =str_pad(strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_porcen$Seccion[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][2]
Resultados.cast_porcen$Letra_Mesa[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][3]
}
#Pongo diferencia de porcentajes entre PP y CS
Resultados.cast_porcen$porcenPPCS <- Resultados.cast_porcen$PP -Resultados.cast_porcen$Cs
min(Resultados.cast_porcen$porcenPPCS)
max(Resultados.cast_porcen$porcenPPCS)
hist(Resultados.cast_porcen$porcenPPCS)
#Histograma por distritos
unique(Resultados.cast_porcen$Distrito)
for(i in unique(Resultados.cast_porcen$Distrito)){
dat <- Resultados.cast_porcen[Resultados.cast_porcen$Distrito==i,c("porcenPPCS")]
#Nombre del distrito
nombre = nombre_distritos[nombre_distritos$Cod==i,2]
hist(dat,main = paste("Distrito:",nombre),breaks=20,xlab = "Difernecias",ylab = "Frecuencias")
}
#Calculo los cuartiles
q<-quantile(Resultados.cast_porcen$porcenPPCS)
# Obtengo los resultados a nivel de Sección censal
datos_secc <- Resultados.cast_abs %>% group_by(Codmun,Distrito,Seccion) %>%
summarise_if(is.numeric,sum)
#Añado el código de barrio
datos_secc$Seccion = str_trim(datos_secc$Seccion)
datos_secc <- merge(datos_secc,secciones,by= c("Distrito","Seccion"))
#Obtengo los resultados a nivel de brrio
datos_barrio <- datos_secc %>% group_by(Codmun,Barrio) %>%
summarise_if(is.numeric,sum)
#porcentaje votos nivel barrio
datos_barrio_porcen <- datos_barrio
datos_barrio_porcen[,6:20]<- round((datos_barrio[,6:20]/apply(datos_barrio[,6:20],1,sum))*100,2)
datos_barrio_porcen$dife <- round(datos_barrio_porcen$PP-datos_barrio_porcen$Cs,2)
#Cuartiles a nivel de barrio
q_barrio <- quantile(datos_barrio_porcen$dife)
datos_barrio_porcen$quartil<- cut(datos_barrio_porcen$dife,q_barrio,
labels = c("q1","q2","q3","q4"),include.lowest = TRUE)
#Mapa Barrios Madrid
mapa<-st_read(
dsn="Mapas/Barrios_Madrid_1_1_2019",
layer = "200001694",stringsAsFactors=F,
options = "ENCODING=windows-1252")
mapa$Barrio <- substr(mapa$GEOCODIGO,4,6)
mapa2<-left_join(mapa,datos_barrio_porcen,by=c("Barrio"))
if (!require("tmap")) install.packages("tmap");require("tmap")
#Mapa porcentaje voto ciudadanos
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
# Con valores de porcentajes
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Cs",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
#Mapa barios de Madrid con diferencia porcentajes voto PP vs Cs
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
View(mapa2)
mapa2$Indice <-(mapa2$PP-mapa2$Cs)+mapa2$PSOE+mapa2$MAS_MADRID
tm_shape(mapa2)+
tm_fill("Indice",palette="Blues", style="jenks",title = "Indice")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Indice voto PP similar Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Indice",palette="Blues", style="jenks",title = "Indice")+
tm_borders()+
tm_text("Indice",size=0.5)+
tm_layout(
"Indice voto PP similar Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Barrio",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Voto Cs")+
tm_borders()+
tm_text("Cs",size=0.5)+
tm_layout(
"Porcentaje voto Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("dife",palette="Blues", style="jenks",title = "Diferencia")+
tm_borders()+
tm_text("dife",size=0.5)+
tm_layout(
"Diferencia porcentaje votos PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Indice",palette="Blues", style="jenks",title = "Indice")+
tm_borders()+
tm_text("Indice",size=0.5)+
tm_layout(
"Indice voto PP similar Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
if (!require("stringr")) install.packages("stringr");require("stringr")
if (!require("readxl")) install.packages("readxl");require("readxl")
if (!require("reshape2")) install.packages("reshape2");require("reshape2")
if (!require("tidyverse")) install.packages("tidyverse");require("tidyverse")
if (!require("sf")) install.packages("sf"); require("sf")
setwd("F:/Elecciones/ComunidadMadrid/")
#Para leer el fichero de secciones
secciones <- read_excel("Ficheros/Secciones_1_1_2020.xls",skip = 4,col_names = T)
colnames(secciones)[3] <- c("Seccion")
secciones$Distrito <-str_pad(secciones$Distrito,2,pad = "0")
secciones$Barrio <-str_pad(secciones$Barrio,3,pad = "0")
secciones$Seccion <- str_pad(secciones$Seccion,3,pad = "0")
#Para leer el fichero de barrios
barrios<-read.table('Ficheros/Barrios.csv', header = TRUE, sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
# Los distritos con sus nombre
nombre_distritos <- read.table('Ficheros/Distritos_Madrid_Municipio.csv', header = TRUE,
sep = ";",stringsAsFactors = FALSE,
colClasses = c("character","character"),encoding='UTF-8')
#Leo fichero resultados electorales
Resultados<-readRDS("Ficheros/Todas_Elecc.rds")
#Obtengo los porcentajes de los votos
Resultados$porcen<-round((Resultados$Votos/(Resultados$T_Votos-Resultados$V_Blancos-Resultados$V_Nulos ))*100,2)
#Me quedo sólo con el municipio de Madrid
Resultados <- Resultados[Resultados$Ano=='2019' & Resultados$Codmun==79,]
Resultados.cast_abs <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'Votos')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_abs$Distrito[i] =str_pad(strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_abs$Seccion[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][2]
Resultados.cast_abs$Letra_Mesa[i] =strsplit(Resultados.cast_abs$Mesa[i],"-")[[1]][3]
}
Resultados.cast_porcen <- dcast(Resultados,Codmun+Mesa+Censo+T_Votos+V_Blancos+Ano~variable,sum,
value.var = 'porcen')
for( i in 1:nrow(Resultados.cast_abs)) {
Resultados.cast_porcen$Distrito[i] =str_pad(strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][1],2,pad = '0')
Resultados.cast_porcen$Seccion[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][2]
Resultados.cast_porcen$Letra_Mesa[i] =strsplit(Resultados.cast_porcen$Mesa[i],"-")[[1]][3]
}
#Pongo diferencia de porcentajes entre PP y CS
Resultados.cast_porcen$porcenPPCS <- Resultados.cast_porcen$PP -Resultados.cast_porcen$Cs
min(Resultados.cast_porcen$porcenPPCS)
max(Resultados.cast_porcen$porcenPPCS)
hist(Resultados.cast_porcen$porcenPPCS)
#Histograma por distritos
unique(Resultados.cast_porcen$Distrito)
for(i in unique(Resultados.cast_porcen$Distrito)){
dat <- Resultados.cast_porcen[Resultados.cast_porcen$Distrito==i,c("porcenPPCS")]
#Nombre del distrito
nombre = nombre_distritos[nombre_distritos$Cod==i,2]
hist(dat,main = paste("Distrito:",nombre),breaks=20,xlab = "Difernecias",ylab = "Frecuencias")
}
#Calculo los cuartiles
q<-quantile(Resultados.cast_porcen$porcenPPCS)
# Obtengo los resultados a nivel de Sección censal
datos_secc <- Resultados.cast_abs %>% group_by(Codmun,Distrito,Seccion) %>%
summarise_if(is.numeric,sum)
#Añado el código de barrio
datos_secc$Seccion = str_trim(datos_secc$Seccion)
datos_secc <- merge(datos_secc,secciones,by= c("Distrito","Seccion"))
#Obtengo los resultados a nivel de brrio
datos_barrio <- datos_secc %>% group_by(Codmun,Barrio) %>%
summarise_if(is.numeric,sum)
#porcentaje votos nivel barrio
datos_barrio_porcen <- datos_barrio
datos_barrio_porcen[,6:20]<- round((datos_barrio[,6:20]/apply(datos_barrio[,6:20],1,sum))*100,2)
datos_barrio_porcen$dife <- datos_barrio_porcen$PP-datos_barrio_porcen$Cs
datos_barrio_porcen <- datos_barrio
datos_barrio_porcen[,6:20]<- round((datos_barrio[,6:20]/apply(datos_barrio[,6:20],1,sum))*100,2)
datos_barrio_porcen$dife <- datos_barrio_porcen$PP-datos_barrio_porcen$Cs
q_barrio <- quantile(datos_barrio_porcen$dife)
datos_barrio_porcen$quartil<- cut(datos_barrio_porcen$dife,q_barrio,
labels = c("q1","q2","q3","q4"),include.lowest = TRUE)
mapa<-st_read(
dsn="Mapas/Barrios_Madrid_1_1_2019",
layer = "200001694",stringsAsFactors=F,
options = "ENCODING=windows-1252")
mapa$Barrio <- substr(mapa$GEOCODIGO,4,6)
mapa3<-left_join(mapa,datos_barrio,by=c("Barrio"))
if (!require("tmap")) install.packages("tmap");require("tmap")
View(mapa3)
tm_layout(
"Votos de Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa3)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Votos Cs")+
tm_borders()+
tm_text(Cs,size = 0.7)+
tm_layout(
"Votos de Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa3)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Votos Cs")+
tm_borders()+
tm_text('Cs',size = 0.7)+
tm_layout(
"Votos de Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa3)+
tm_fill("Cs",palette="Blues", style="jenks",title = "Votos Cs")+
tm_borders()+
tm_text('Cs',size = 0.5)+
tm_layout(
"Votos de Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
mapa<-st_read(
dsn="Mapas/Barrios_Madrid_1_1_2019",
layer = "200001694",stringsAsFactors=F,
options = "ENCODING=windows-1252")
mapa$Barrio <- substr(mapa$GEOCODIGO,4,6)
mapa2<-left_join(mapa,datos_barrio_porcen,by=c("Barrio"))
mapa2$Indicador <- abs(mapa2$PP-mapa2$Cs)+mapa2$PSOE+mapa2$MAS_MADRID
tm_layout(
"Indicador voto PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Indicador",palette="Blues", style="jenks",title = "Indicador")+
tm_borders()+
tm_text('Indicador',size = 0.6)+
tm_layout(
"Indicador voto PP vs Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Indicador",palette="Blues", style="jenks",title = "Indicador")+
tm_borders()+
tm_text('Indicador',size = 0.6)+
tm_layout(
"Indicador voto PP similar Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
tm_shape(mapa2)+
tm_fill("Indicador",palette="Blues", style="jenks",title = "Indicador")+
tm_borders()+
tm_text('Indicador',size = 0.5)+
tm_layout(
"Indicador voto PP similar Cs\n Elecciones mayo 2019",
legend.position = c("left","bottom"))
library(Relectoral)
library(Relectoral)
